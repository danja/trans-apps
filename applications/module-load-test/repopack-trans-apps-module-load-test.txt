This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-25T13:35:13.660Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.
- Code comments have been removed.

Additional Info:
----------------
User Provided Header:
-----------------------
module-load-test source code

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
processors/
  _ModuleLoaderFactory.js
  Concat.js
about.md
manifest.ttl
module-load-test-runner.js
package.json
processors-config.ttl
transmissions.ttl

================================================================
Repository Files
================================================================

================
File: processors/_ModuleLoaderFactory.js
================
import { ModuleLoader } from '../../../../transmissions/src/engine/ModuleLoader.js';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

class ModuleLoaderFactory {
    static createModuleLoader() {
        const classpath = [
            path.resolve(__dirname, 'processors'),
            path.resolve(__dirname, '../../../../transmissions/src/processors')
        ];
        return new ModuleLoader(classpath);
    }
}

export default ModuleLoaderFactory;

================
File: processors/Concat.js
================
import ProcessProcessor from '../../../../transmissions/src/processors/base/ProcessProcessor.js';
import logger from '../../../../transmissions/src/utils/Logger.js';

class Concat extends ProcessProcessor {
    constructor(config) {
        logger.log('Concat process.cwd() = ${process.cwd()}')
        super(config);
    }

    async execute(message) {
        logger.debug('Concat execute method called');
        logger.debug('Input message:', JSON.stringify(message, null, 2));

        const first = message[this.firstKey]
        const second = message[this.secondKey]

        if (!first || !second) {
            throw new Error('Missing required input values');
        }

        message[this.resultKey] = first + second;

        logger.debug('Updated message:', JSON.stringify(message, null, 2));
        this.emit('message', message);
    }
}

export default Concat;

================
File: about.md
================
./trans ../trans-apps/applications/module-load-test -m {"first":"one","second":"two"}

================
File: manifest.ttl
================
### manifest.ttl  ###

#### from danny.ayers.name 
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

# SIOC 

@prefix trm: <http://purl.org/stuff/transmission/> .
@prefix fs: <http://purl.org/stuff/filesystem/> .
@prefix pc: <http://purl.org/stuff/postcraft/> .
@prefix t: <http://hyperdata.it/transmissions/> . # for custom terms & instances

<https://danny.ayers.name> a pc:Site ;
    rdfs:label "danny.ayers.name" ;
    dcterms:title "Rawer" ;
    pc:contains <https://danny.ayers.name/home> ;  # maybe
    pc:includes t:PostContent . # maybe
    
# this should maybe give the contentgroup a renderType, indirect with template etc

# ENTRIES CONTENT
t:PostContent a pc:ContentGroup ; 
    rdfs:label "entries" ;
    pc:site <https://danny.ayers.name> ;
    pc:subdir "home" ; # better property name?
    fs:sourceDirectory "content-raw/entries" ; # SOURCE DIR HERE journal, entries
    fs:targetDirectory "cache/entries" ;
    pc:template "layouts/mediocre/templates/entry-content_template.njk" .

# ENTRIES PAGES
t:PostPages a pc:ContentGroup ;
    pc:site <https://danny.ayers.name> ;
    fs:targetDirectory "public/home/entries" ;
    pc:template "layouts/mediocre/templates/entry-page_template.njk" .

# ENTRIES MAIN PAGE
t:IndexPage a pc:ContentGroup ; # TODO naming!
    pc:site <https://danny.ayers.name> ;
    fs:filepath "public/home/index.html" ;
    pc:template "layouts/mediocre/templates/index-page_template.njk" .

#################################
# ENTRIES CONTENT
t:TodoContent a pc:ContentGroup ; 
    rdfs:label "todo" ;
    pc:site <https://danny.ayers.name> ;
    pc:subdir "home" ; # better property name?
    fs:sourceDirectory "content-raw/todo" ; # SOURCE DIR HERE journal, entries
    fs:targetDirectory "cache/todo" ;
    pc:template "layouts/mediocre/templates/entry-content_template.njk" .

####################################

# STYLES ETC currently just done with FileCopy
t:CSS a pc:StaticGroup ;
    pc:site <https://danny.ayers.name> ;
    fs:sourceDirectory "layouts/mediocre/css" ;
    fs:targetDirectory "public/home/css" .

t:fonts a pc:StaticGroup ;
    pc:site <https://danny.ayers.name> ;
    fs:sourceDirectory "layouts/mediocre/fonts" ;
    fs:targetDirectory "public/home/js" .

t:JS a pc:StaticGroup ;
    pc:site <https://danny.ayers.name> ;
    fs:sourceDirectory "layouts/mediocre/js" ;
    fs:targetDirectory "public/home/js" .


# pinned - not yet implemented
<https://danny.ayers.name/index> a pc:SpecialCase ;
    pc:state "pinned" ;
    fs:sourceFile "home/2023-10-27_hello.md" ;
    fs:targetFile "public/home/2023-10-27_hello.html" .
#     pc:template "layouts/mediocre/mediocre-posts_template.html" .

================
File: module-load-test-runner.js
================
import path from 'path';
import { fileURLToPath } from 'url';
import TransmissionBuilder from '../../../transmissions/src/engine/TransmissionBuilder.js';
import ModuleLoaderFactory from './processors/_ModuleLoaderFactory.js';
import logger from '../../../transmissions/src/utils/Logger.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function main() {
    logger.setLogLevel('debug');

    const transmissionConfigFile = path.join(__dirname, 'transmissions.ttl');
    const processorsConfigFile = path.join(__dirname, 'services-config.ttl');

    try {
        const moduleLoader = ModuleLoaderFactory.createModuleLoader();
        const transmissions = await TransmissionBuilder.build(transmissionConfigFile, processorsConfigFile, moduleLoader);

        const message = {
            first: 'one',
            second: 'two'
        };

        for (const transmission of transmissions) {
            await transmission.execute(message);
        }
    } catch (error) {
        logger.error('Error:', error);
        logger.debug('Error details:', error.stack);
    }
}

main().catch(console.error);

================
File: package.json
================
{
    "name": "module-load-test",
    "version": "1.0.0",
    "type": "module",
    "main": "module-load-test-runner.js",
    "scripts": {
        "start": "node module-load-test-runner.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "rp": "repopack --verbose -c repopack.config.json ."
    },
    "keywords": [],
    "author": "Danny Ayers",
    "license": "MIT",
    "description": "A test application for dynamic module loading in Transmissions"
}

================
File: processors-config.ttl
================
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix trm: <http://purl.org/stuff/transmission/> .
@prefix t: <http://hyperdata.it/transmissions/> .

t:ConcatConfig a trm:ServiceConfig ;
    trm:key t:concat ;
    trm:firstKey "first" ;
    trm:secondKey "second" ;
    trm:resultKey "result" .

================
File: transmissions.ttl
================
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix trm: <http://purl.org/stuff/transmission/> .
@prefix : <http://hyperdata.it/transmissions/> .

#############################################################
# insert into pipe for debugging
:DE a :DeadEnd . # ends the current pipe quietly
:H  a :Halt . # kills everything 
:SC a :ShowConfig . # verbose report, continues pipe
:SM a :ShowMessage . # verbose report, continues pipe
:SM1 a :ShowMessage . # verbose report, continues pipe
:SM2 a :ShowMessage . # verbose report, continues pipe
:N  a :NOP . # no operation (except for showing stage in pipe)
:UF a :Unfork . # collapses all pipes but one 
#############################################################

:module_load_test a trm:Pipeline ;


trm:pipe (:SM :DE :p10 :SM  :p20 ) .

:p10 a :DatasetReader . 
:p20 a :Concat .
