This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-17T22:18:20.588Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.
- Code comments have been removed.

Additional Info:
----------------
User Provided Header:
-----------------------
git-apps source code

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
processors/
  Concat.js
  ModuleLoaderFactory.js
module-load-test-runner.js
package.json
processors-config.ttl
transmissions.ttl

================================================================
Repository Files
================================================================

================
File: processors/Concat.js
================
import ProcessProcessor from '../../../../../transmissions/src/processors/base/ProcessProcessor.js';
import logger from '../../../../../transmissions/src/utils/Logger.js';

class Concat extends ProcessProcessor {
    constructor(config) {
        super(config);
        this.firstKey = config.firstKey || 'first';
        this.secondKey = config.secondKey || 'second';
        this.resultKey = config.resultKey || 'result';
    }

    async execute(message) {
        logger.debug('Concat execute method called');
        logger.debug('Input message:', JSON.stringify(message, null, 2));

        const first = message[this.firstKey];
        const second = message[this.secondKey];

        if (!first || !second) {
            throw new Error('Missing required input values');
        }

        message[this.resultKey] = first + second;

        logger.debug('Updated message:', JSON.stringify(message, null, 2));
        this.emit('message', message);
    }
}

export default Concat;

================
File: processors/ModuleLoaderFactory.js
================
import { ModuleLoader } from '../../../../transmissions/src/engine/ModuleLoader.js';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

class ModuleLoaderFactory {
    static createModuleLoader() {
        const classpath = [
            path.resolve(__dirname, 'processors'),
            path.resolve(__dirname, '../../../../transmissions/src/processors')
        ];
        return new ModuleLoader(classpath);
    }
}

export default ModuleLoaderFactory;

================
File: module-load-test-runner.js
================
import path from 'path';
import { fileURLToPath } from 'url';
import TransmissionBuilder from '../../../transmissions/src/engine/TransmissionBuilder.js';
import ModuleLoaderFactory from './processors/ModuleLoaderFactory.js';
import logger from '../../../transmissions/src/utils/Logger.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function main() {
    logger.setLogLevel('debug');

    const transmissionConfigFile = path.join(__dirname, 'transmissions.ttl');
    const processorsConfigFile = path.join(__dirname, 'services-config.ttl');

    try {
        const moduleLoader = ModuleLoaderFactory.createModuleLoader();
        const transmissions = await TransmissionBuilder.build(transmissionConfigFile, processorsConfigFile, moduleLoader);

        const message = {
            first: 'one',
            second: 'two'
        };

        for (const transmission of transmissions) {
            await transmission.execute(message);
        }
    } catch (error) {
        logger.error('Error:', error);
        logger.debug('Error details:', error.stack);
    }
}

main().catch(console.error);

================
File: package.json
================
{
    "name": "module-load-test",
    "version": "1.0.0",
    "type": "module",
    "main": "module-load-test-runner.js",
    "scripts": {
        "start": "node module-load-test-runner.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "rp": "repopack --verbose -c repopack.config.json ."
    },
    "keywords": [],
    "author": "Danny Ayers",
    "license": "MIT",
    "description": "A test application for dynamic module loading in Transmissions"
}

================
File: processors-config.ttl
================
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix trm: <http://purl.org/stuff/transmission/> .
@prefix t: <http://hyperdata.it/transmissions/> .

t:ConcatConfig a trm:ServiceConfig ;
    trm:key t:concat ;
    trm:firstKey "first" ;
    trm:secondKey "second" ;
    trm:resultKey "result" .

================
File: transmissions.ttl
================
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix trm: <http://purl.org/stuff/transmission/> .
@prefix : <http://hyperdata.it/transmissions/> .

:module_load_test a trm:Pipeline ;
    trm:pipe (:s1 :s2 :s3) .

:s1 a :Concat .
:s2 a :ShowMessage .
:s3 a :DeadEnd .
